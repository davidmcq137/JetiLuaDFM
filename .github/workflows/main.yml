name: CI
on:
  push:
    branches: [master, dev]
jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v2
      - name: Checkout lua_jeti repo
        uses: actions/checkout@v2
        with:
          repository: fazzone/lua_jeti
          path: lua_jeti
      - name: Build lua itself
        shell: bash
        run: |
          set -ex
          cd lua_jeti
          make -j4 linux
      - name: Build LC
        id: lc_build
        shell: bash
        run: |
          set -eux
          PATH="$PATH:$PWD/lua_jeti/src"
          REPO_ROOT="$PWD"
          mkdir release-output
          APP_NAME="DFM-Maps"

          LUA_SOURCE_DIR=$PWD
          if [[ ! -f "${LUA_SOURCE_DIR}/${APP_NAME}.lua" ]]; then
            LUA_SOURCE_DIR="${LUA_SOURCE_DIR}/${APP_NAME}"
          fi

          cd $LUA_SOURCE_DIR
          DFM_MAPS_VERSION=$(lua -e "print((require 'DFM-Maps').version)")
          echo "::set-output name=dfm_maps_version::${DFM_MAPS_VERSION}"
          luac -o "${REPO_ROOT}/${APP_NAME}.lc" "${APP_NAME}.lua"
          cd $REPO_ROOT

          if [[ $GITHUB_REF = refs/heads/master ]]; then
            OUTPUT_ZIP="release-output/DFM-Maps-v${DFM_MAPS_VERSION}.zip"
          else
            OUTPUT_ZIP="release-output/DFM-Maps-build${GITHUB_RUN_ID}.zip"
          fi

          zip -r $OUTPUT_ZIP "${APP_NAME}.lc" $APP_NAME

      - name: Upload release asset
        if: ${{ github.ref == 'refs/heads/master' }}
        id: upload-release-asset 
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: release-v${{ steps.lc_build.outputs.dfm_maps_version }}
          name: "DFM-Maps version ${{ steps.lc_build.outputs.dfm_maps_version }}"
          files: |
            release-output/*
      - name: Upload dev asset
        if: ${{ github.ref == 'refs/heads/dev' }}
        id: upload-dev-asset 
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: true
          tag_name: build-${{ github.run_id }}
          name: "DFM-Maps build #${{ github.run_id }}"
          files: |
            release-output/*




