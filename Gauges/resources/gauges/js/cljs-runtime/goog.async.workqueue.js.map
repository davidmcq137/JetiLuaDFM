{
"version":3,
"file":"goog.async.workqueue.js",
"lineCount":60,
"mappings":"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",
"sources":["goog/async/workqueue.js"],
"sourcesContent":["/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\ngoog.provide('goog.async.WorkItem');\ngoog.provide('goog.async.WorkQueue');\n\ngoog.require('goog.asserts');\ngoog.require('goog.async.FreeList');\n\n\n// TODO(johnlenz): generalize the WorkQueue if this is used by more\n// than goog.async.run.\n\n\n\n/**\n * A low GC workqueue. The key elements of this design:\n *   - avoids the need for goog.bind or equivalent by carrying scope\n *   - avoids the need for array reallocation by using a linked list\n *   - minimizes work entry objects allocation by recycling objects\n * @constructor\n * @final\n * @struct\n */\ngoog.async.WorkQueue = function() {\n  'use strict';\n  this.workHead_ = null;\n  this.workTail_ = null;\n};\n\n\n/** @define {number} The maximum number of entries to keep for recycling. */\ngoog.async.WorkQueue.DEFAULT_MAX_UNUSED =\n    goog.define('goog.async.WorkQueue.DEFAULT_MAX_UNUSED', 100);\n\n\n/** @const @private {goog.async.FreeList<goog.async.WorkItem>} */\ngoog.async.WorkQueue.freelist_ = new goog.async.FreeList(\n    function() {\n      'use strict';\n      return new goog.async.WorkItem();\n    },\n    function(item) {\n      'use strict';\n      item.reset();\n    },\n    goog.async.WorkQueue.DEFAULT_MAX_UNUSED);\n\n\n/**\n * @param {function()} fn\n * @param {Object|null|undefined} scope\n */\ngoog.async.WorkQueue.prototype.add = function(fn, scope) {\n  'use strict';\n  var item = this.getUnusedItem_();\n  item.set(fn, scope);\n\n  if (this.workTail_) {\n    this.workTail_.next = item;\n    this.workTail_ = item;\n  } else {\n    goog.asserts.assert(!this.workHead_);\n    this.workHead_ = item;\n    this.workTail_ = item;\n  }\n};\n\n\n/**\n * @return {goog.async.WorkItem}\n */\ngoog.async.WorkQueue.prototype.remove = function() {\n  'use strict';\n  var item = null;\n\n  if (this.workHead_) {\n    item = this.workHead_;\n    this.workHead_ = this.workHead_.next;\n    if (!this.workHead_) {\n      this.workTail_ = null;\n    }\n    item.next = null;\n  }\n  return item;\n};\n\n\n/**\n * @param {goog.async.WorkItem} item\n */\ngoog.async.WorkQueue.prototype.returnUnused = function(item) {\n  'use strict';\n  goog.async.WorkQueue.freelist_.put(item);\n};\n\n\n/**\n * @return {goog.async.WorkItem}\n * @private\n */\ngoog.async.WorkQueue.prototype.getUnusedItem_ = function() {\n  'use strict';\n  return goog.async.WorkQueue.freelist_.get();\n};\n\n\n\n/**\n * @constructor\n * @final\n * @struct\n */\ngoog.async.WorkItem = function() {\n  'use strict';\n  /** @type {?function()} */\n  this.fn = null;\n  /** @type {?Object|null|undefined} */\n  this.scope = null;\n  /** @type {?goog.async.WorkItem} */\n  this.next = null;\n};\n\n\n/**\n * @param {function()} fn\n * @param {Object|null|undefined} scope\n */\ngoog.async.WorkItem.prototype.set = function(fn, scope) {\n  'use strict';\n  this.fn = fn;\n  this.scope = scope;\n  this.next = null;\n};\n\n\n/** Reset the work item so they don't prevent GC before reuse */\ngoog.async.WorkItem.prototype.reset = function() {\n  'use strict';\n  this.fn = null;\n  this.scope = null;\n  this.next = null;\n};\n"],
"names":["goog","provide","require","async","WorkQueue","goog.async.WorkQueue","workHead_","workTail_","DEFAULT_MAX_UNUSED","define","freelist_","FreeList","WorkItem","item","reset","prototype","add","goog.async.WorkQueue.prototype.add","fn","scope","getUnusedItem_","set","next","asserts","assert","remove","goog.async.WorkQueue.prototype.remove","returnUnused","goog.async.WorkQueue.prototype.returnUnused","put","goog.async.WorkQueue.prototype.getUnusedItem_","get","goog.async.WorkItem","goog.async.WorkItem.prototype.set","goog.async.WorkItem.prototype.reset"]
}
